<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <!--配置mybatis-->
    <!--1:配置数据库参数 properties的属性：${}  -->
    <!--<context:property-placeholder location="classpath:database.properties"/>-->
    <!--加载数据库配置信息-->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location">
            <value>classpath:properties/database.properties</value>
        </property>
        <property name="fileEncoding" value="utf-8"/>
    </bean>
    <!--2:数据库的连接池--><!--destroy-method="close"-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!-- 配置连接池属性 -->
        <property name="driverClass" value="${driver}"/>
        <property name="jdbcUrl" value="${url}"/>
        <property name="user" value="${username}"/>
        <property name="password" value="${password}"/>

        <!-- c3p0连接池的私有属性 -->
        <property name="maxPoolSize" value="${maxPoolSize}"/>
        <property name="minPoolSize" value="${minPoolSize}"/>
        <!-- 关闭连接后不自动 commit -->
        <property name="autoCommitOnClose" value="false"/>
        <!-- 获取连接超时时间 -->
        <property name="checkoutTimeout" value="${checkoutTimeout}"/>
        <!-- 获取连接失败重试次数 -->
        <property name="acquireRetryAttempts" value="${acquireRetryAttempts}"/>

    </bean>

    <!-- 3：配置SqlSessionFactory 对象-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 输入数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 配置Mybatis 全局配置文件 -->
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>
        <!-- 扫面 entity 包 使用别名  -->
        <property name="typeAliasesPackage" value="com.hejinyo.ssm.model"/>
        <!-- 扫面 Mapper 配置文件-->

    <!--    <property name="mapperLocations" value="classpath*:mybatis/*Mapper.xml"/>-->
        <property name="mapperLocations" value="classpath*:com/hejinyo/ssm/dao/*.xml"/>
    </bean>

    <!-- 4：配置扫描 mapper 接口包，动态实现Dao接口 ，并注入到spring 容器中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入SqlSessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!-- 给出扫描dao 接口包 -->
        <property name="basePackage" value="com.hejinyo.ssm.mapper"/>
    </bean>
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
</beans>